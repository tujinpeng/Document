--------------------知识点整理：------------------
数据结构
算法

集合
异常？？？
并发
nio

设计模式（单例 模板 工厂 动态代理 装饰器 责任链 建造者）

spring（ioc aop 事务）
mybatis

dubbo

netty

-----------------------------------------------
#cas compareAndSet 如果两个线程是同一个对象 都能set成功么

#LongAddr高效原子计数器

#强引用 弱引用（ThreadLocal WeakHashMap） 软引用 虚引用

#new出来的对象 只能被gc回收 设置成空只是把引用设置成null

#对象是不能设置成空的，只能把所有对象引用设置成null，这样对象没有别人引用了，gc会回收对象。

#建造者模式
将对象的组装和表现分离开来


#深入理解Java中为什么内部类可以访问外部类的成员？
1 内部类对象的创建依赖于外部类对象；
2 内部类对象持有指向外部类对象的引用。

#基础
1.面向对象：
一切皆是对象，用引用操控对象
new的对象存在堆中，对象引用、基本数据类型在堆栈中

2.对象的访问控制
public---所有类可见
protected---继承可见 同一包可见 不同包子类可见
default---包私有 同一包下可见
private---类私有

3.hashcode和equals
(1)当对象作为散列的数据结构(HashSet HashMap LinkedHashSet LinkedHashMap)的key时，注意要覆写hashcode和equals方法，保证key的唯一性

(2)覆写equals方法时，必须覆写hashcode方法
equals方法相等时，hashcode值一定相等
equals方法不相等时，hashcode值可以相等(hash冲突)






#集合
(1)数组 
ArrayList

CopyOnWriteArrayList(读大于写-线程安全的数组)

(2)链表（跳表）
LinkedList(Queue Dequeue)


跳跃表 有序的单链表 插入删除查找的时间复杂度为o(logn) 性能媲美红黑树
--ConcurrentSkipListMap（线程安全的跳跃表）
原理：volatile(保证可见性)+cas(保证原子性)方式 提供线程安全的并发工具
操作：
	add 插入
	remove 删除


(3)栈    
stack

(4)队列
#单向队列Queue
ArrayDeque(循环数组)
LinkedList（双向链表）


#双向队列Deque
ArrayDeque
LinkedList

#优先级队列
PriorityQueue

#线程安全的单向队列BlockingQueue
ArrayBlockingQueue
LinkedBlockingQueue
PriorityBlockingQueue
DelayQueue
SynchronousQueue
LinkedTransferQueue

ConcurrentLinkedQueue(cas)

#线程安全的双向队列BlockingDeque
LinkedBlockingDeque

ConcurrentLinkedDeque(cas)


(5)hash表 
HashMap（jdk1.8 红黑树） 
HashSet
LinkedHashMap(双向循环链表+hash表)
LinkedHashSet
WeakHashMap(弱引用+hash表) 
TreeHashMap（红黑树+hash表） 
ConcurrentHashMap
hashTable

(6)二叉树 红黑树 插入删除遍历时间复杂度都是 O(logn)
-TreeHashMap
#树插入操作
put

#树遍历获取节点操作   
get   

#遍历
entrySet 树节点对象entry集合
keySet	 树节点对象key集合
values   树节点对象value集合

#Interator(集合遍历统一接口)
next    输出当前要遍历元素，计算下一个元素  
hasNext 判断是否有下一个元素要遍历
remove	删除当前遍历的元素

EntryIterator 树节点对象entry遍历
KeyIterator	  树节点对象key遍历
ValueIterator 树节点对象value遍历

#删除
remove

#从fromKey开始返回map部分视图
tailMap(K fromKey)

#返回树中最小的元素
firstKey


(7)堆(优先级队列) 
PriorityQueue


#异常
(1)对于你自己犯的错，我们就称为RuntimeException，我们也叫做unchecked Exception。程序中可以处理也可以不处理

像NullPointException ArrayIndexOutOfBoundsException等等都属于运行时异常

(2)对于不是你犯的错，我们统称为非RuntimeException，也叫checked Exception。
程序强制你处理

像IOException都是强制要检查的异常



